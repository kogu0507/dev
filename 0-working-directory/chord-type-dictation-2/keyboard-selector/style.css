/* keybord-selector/style.css */

.scs-keyboard-root-container {
    position: relative;
    width: 100%;
    /* 親要素の幅いっぱいに広がる */
    height: 200px;
    /* 鍵盤全体の高さ */
    overflow-x: auto;
    /* スマホで横スクロールを可能にする */
    overflow-y: hidden;
    /* 縦スクロールは不要 */
    background-color: #f0f0f0;
    /* 背景色 */
    border: 1px solid #ccc;
    box-sizing: border-box;
    /* paddingとborderをwidth/heightに含める */
}

.white-keys {
    display: flex;
    height: 100%;
    /* 親の高さに合わせる */
    min-width: 500px;
    /* スマホでこれ以上小さくならないようにし、スクロールを発生させる */
}

.black-keys {
    position: absolute;
    /* 白鍵の上に重ねるために絶対配置 */
    top: 0;
    left: 0;
    height: 60%;
    /* 黒鍵の高さ（白鍵の約60%程度） */
    width: 100%;
    /* 白鍵のコンテナと同じ幅（min-widthの影響を受ける） */
    display: flex;
    justify-content: space-between;
    /* 黒鍵の配置を調整するために使用 */
    pointer-events: none;
    /* 黒鍵の下の白鍵がクリックできるようにする */
    min-width: 500px;
    /* 白鍵のmin-widthと合わせる */
}

.scs-keyboard-note {
    box-sizing: border-box;
    cursor: pointer;
    /* display: flex; /* これを削除またはコメントアウト */
    /* justify-content: center; /* これを削除またはコメントアウト */
    /* align-items: flex-end; /* これを削除またはコメントアウト */
    padding-bottom: 0;
    /* padding-bottomも不要になることが多い */
    font-size: 0.8em;
    /* 音名用のspanに移すか、残す */
    user-select: none;
    pointer-events: auto;
    position: relative;
    /* 子要素のabsolute配置の基準にする */
}

.white-key {
    flex-grow: 1;
    /* 親要素の幅に合わせて広がる */
    border: 1px solid #888;
    border-right: none;
    /* 右側の線は次の鍵盤が担当 */
    background-color: white;
    z-index: 1;
    /* 黒鍵より下に配置 */
}

/* 最後の白鍵の右側の線を表示 */
.white-key:last-child {
    border-right: 1px solid #888;
}

.black-key {
    position: absolute;
    /* 白鍵の上に重ねる */
    width: 10%;
    /* 白鍵の約半分の幅を想定して調整 (これはmin-widthと相対的に調整が必要) */
    height: 100%;
    background-color: black;
    border: 1px solid #444;
    border-radius: 0 0 3px 3px;
    /* 下部を少し丸める */
    z-index: 2;
    /* 白鍵より上に配置 */
    color: #eee;
    /* 黒鍵の音名の色 */
    font-size: 0.7em;
    padding-bottom: 3px;
}

/* 黒鍵の具体的な位置調整 */
/* C# */
.black-key[data-id="61"] {
    left: calc((100% / 8) * 0.75);
}

/* Cの右端とDの左端の中間あたり */
/* D# */
.black-key[data-id="63"] {
    left: calc((100% / 8) * 1.75);
}

/* F# */
.black-key[data-id="66"] {
    left: calc((100% / 8) * 3.75);
}

/* G# */
.black-key[data-id="68"] {
    left: calc((100% / 8) * 4.75);
}

/* A# */
.black-key[data-id="70"] {
    left: calc((100% / 8) * 5.75);
}

/* ホバー時のスタイル（オプション） */
.scs-keyboard-note:hover {
    filter: brightness(95%);
    /* 少し明るくする */
}

/* 音名表示のスタイル */
.scs-note-name {
    position: absolute;
    bottom: 5px;
    /* 鍵盤の下部に配置 */
    left: 50%;
    transform: translateX(-50%);
    z-index: 2;
    color: inherit;
    font-size: 1em;
}

.white-key:hover {
    background-color: #f5f5f5;
}

.black-key:hover {
    background-color: #333;
}

/* 黒鍵の音名の色 */
.black-key .scs-note-name {
    color: #eee;
}

/* 黒鍵上のチェックマークの色を明るくする */
.black-key .scs-check-mark {
    color: limegreen;
    /* 黒鍵上では明るい色が良い */
}

/* チェックマークのスタイル */
.scs-check-mark {
    position: absolute;
    bottom: 25px;
    /* ここを調整！音名の位置 (bottom: 5px) とフォントサイズを考慮して微調整 */
    /* 例: 音名フォントサイズが12px程度なら、5px(音名底辺) + 12px(音名高さ) + 8px(チェックマークと音名の間の余白) = 25px くらい */
    left: 50%;
    transform: translateX(-50%);
    font-size: 1.5em;
    font-weight: bold;
    /* チェックマークを太字にする */
    z-index: 3;
    pointer-events: none;
    color: green;
    /* 白鍵のデフォルト色 (黒鍵は後で上書き) */
}

.scs-check-mark.hidden {
    display: none;
}

/* -------------------------------------- */
/* 選択状態のスタイル（修正箇所） */
/* -------------------------------------- */

/* 選択された鍵盤に適用するスタイル (これは共通でOK) */
.scs-keyboard-note.is-selected {
    /* 必要であれば背景色などをここで調整 */
}

/* 白鍵が選択された場合の背景色 */
.white-key.is-selected {
    background-color: #e0f2f7;
    /* 薄い水色 */
}

/* 黒鍵が選択された場合の背景色 */
.black-key.is-selected {
    background-color: #444;
    /* 少し明るい黒 */
}


/* 選択された鍵盤に適用するスタイル (背景色など) */
.scs-keyboard-note.is-selected {
    /* 必要であれば背景色などをここで調整 */
}

.white-key.is-selected {
    background-color: #e0f2f7;
    /* 薄い水色 */
}

.black-key.is-selected {
    background-color: #444;
    /* 少し明るい黒 */
}

/* is-selectedクラスがある場合に、子要素のscs-check-markからhiddenを外す */
/* このCSSは不要になります。JavaScriptで直接hiddenクラスを操作するため */


/* 白鍵に選択された場合のチェックマーク位置 */
.white-key.is-selected::after {
    color: green;
    /* 白鍵上では濃い色が良い */
    bottom: 20px;
    /* 白鍵の音名より少し上。この値は調整してください */
}

/* 黒鍵に選択された場合のチェックマーク位置 */
.black-key.is-selected::after {
    color: limegreen;
    /* 黒鍵上では明るい色が良い */
    bottom: 20px;
    /* 黒鍵の音名より少し上。この値は調整してください */
}

/* -------------------------------------- */
/* 選択状態のスタイル（修正ここまで） */
/* -------------------------------------- */